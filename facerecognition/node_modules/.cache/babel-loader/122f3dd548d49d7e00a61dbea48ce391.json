{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dbode\\\\OneDrive\\\\Desktop\\\\Projects\\\\Face Recognition Project\\\\facerecognition\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/logo/Logo';\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm';\nimport Rank from './components/rank/Rank';\nimport FaceRecognition from './components/faceRecognition/FaceRecognition';\nimport Particles from \"react-tsparticles\";\nimport Signin from './components/signin/signin';\nimport Register from './components/register/Register'; // import Clarifai from 'clarifai';\n\nimport './App.css'; // const app = new Clarifai.App({\n//  apiKey: 'efab85dd1afc42c2925f65da4e3197f0'\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst particlesOptions = {\n  fpsLimit: 120,\n  interactivity: {\n    events: {\n      onClick: {\n        enable: true,\n        mode: \"push\"\n      },\n      resize: true\n    },\n    modes: {\n      bubble: {\n        distance: 400,\n        duration: 2,\n        opacity: 0.8,\n        size: 40\n      },\n      push: {\n        quantity: 4\n      },\n      repulse: {\n        distance: 200,\n        duration: 0.4\n      }\n    }\n  },\n  particles: {\n    color: {\n      value: \"#ffffff\"\n    },\n    links: {\n      color: \"#ffffff\",\n      distance: 150,\n      enable: true,\n      opacity: 0.5,\n      width: 1\n    },\n    collisions: {\n      enable: true\n    },\n    move: {\n      direction: \"none\",\n      enable: true,\n      outMode: \"bounce\",\n      random: false,\n      speed: 1.5,\n      straight: false\n    },\n    number: {\n      density: {\n        enable: true,\n        area: 800\n      },\n      value: 100\n    },\n    opacity: {\n      value: 0.5\n    },\n    shape: {\n      type: \"circle\"\n    },\n    size: {\n      random: true,\n      value: 5\n    }\n  },\n  detectRetina: true\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regios[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      console.log(event.target.value);\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSummit = () => {\n      console.log('click');\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.model.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState({\n              users: {\n                entries: count\n              }\n            });\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signin') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        id: \"tsparticles\",\n        options: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        onRouteChange: this.onRouteChange,\n        isSignedIn: this.state.isSignedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), this.state.route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onSummit: this.onSummit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: this.state.box,\n          imageUrl: this.state.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this) : this.state.route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/dbode/OneDrive/Desktop/Projects/Face Recognition Project/facerecognition/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Particles","Signin","Register","particlesOptions","fpsLimit","interactivity","events","onClick","enable","mode","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","color","value","links","width","collisions","move","direction","outMode","random","speed","straight","number","density","area","shape","type","detectRetina","App","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regios","region_info","bounding_box","image","document","getElementById","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","console","log","target","input","onButtonSummit","imageUrl","state","app","model","predict","Clarifai","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","users","catch","err","onRouteChange","route","isSignedIn","render","onSummit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/logo/Logo';\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm';\nimport Rank from './components/rank/Rank';\nimport FaceRecognition from './components/faceRecognition/FaceRecognition';\nimport Particles from \"react-tsparticles\"; \nimport Signin from './components/signin/signin';\nimport Register from './components/register/Register';\n// import Clarifai from 'clarifai';\nimport './App.css';\n\n\n\n\n// const app = new Clarifai.App({\n//  apiKey: 'efab85dd1afc42c2925f65da4e3197f0'\n// });\n\nconst particlesOptions = {\n  fpsLimit: 120,\n  interactivity: {\n    events: {\n      onClick: {\n        enable: true,\n        mode: \"push\",\n      },\n      resize: true,\n    },\n    modes: {\n      bubble: {\n        distance: 400,\n        duration: 2,\n        opacity: 0.8,\n        size: 40,\n      },\n      push: {\n        quantity: 4,\n      },\n      repulse: {\n        distance: 200,\n        duration: 0.4,\n      },\n    },\n  },\n  particles: {\n    color: {\n      value: \"#ffffff\",\n    },\n    links: {\n      color: \"#ffffff\",\n      distance: 150,\n      enable: true,\n      opacity: 0.5,\n      width: 1,\n    },\n    collisions: {\n      enable: true,\n    },\n    move: {\n      direction: \"none\",\n      enable: true,\n      outMode: \"bounce\",\n      random: false,\n      speed: 1.5,\n      straight: false,\n    },\n    number: {\n      density: {\n        enable: true,\n        area: 800,\n      },\n      value: 100,\n    },\n    opacity: {\n      value: 0.5,\n    },\n    shape: {\n      type: \"circle\",\n    },\n    size: {\n      random: true,\n      value: 5,\n    },\n  },\n  detectRetina: true,\n}\n\n\nclass App extends Component{\n  \n  constructor(){\n    super();\n\n    this.state = {\n      input:'',\n      imageUrl: '',\n      box: {},\n      route:'signin',\n      isSignedIn: false,\n      user:{\n        id:'',\n        name:'',\n        email:'',\n        entries:0,\n        joined:''\n      }\n    }   \n  }\n\n  loadUser = (data) => {\n    this.setState({user:{\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  // Not needed, it was used just to check conection to server\n\n  // componentDidMount(){\n  //   fetch('http://localhost:3000')\n  //   .then(response => response.json())\n  //   .then(data => console.log(data)) // .then(console.log) -> this is a shorthand version\n  // }\n\n  calculateFaceLocation = (data) =>{\n    const clarifaiFace = data.outputs[0].data.regios[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol : width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\ndisplayFaceBox = (box) => {\n  this.setState({box:box});\n}\n\n  onInputChange = (event) =>{\n    console.log(event.target.value);\n    this.setState({input: event.target.value});\n  }\n\n  //Try to fix this\n  onButtonSummit = () =>{\n    console.log('click');\n    this.setState({imageUrl:this.state.input});\n\n    app.model.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then( response => {\n        if(response){\n          fetch('http://localhost:3000/image',{\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                id: this.state.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n            this.setState({users:{\n              entries:count\n            }})\n          })\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signin') {\n      this.setState({isSignedIn: false});\n    }else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {    \n    return (\n      <div className=\"App\">\n        <Particles className='particles' id=\"tsparticles\" options={particlesOptions}/>\n        <Navigation onRouteChange={this.onRouteChange}  isSignedIn={this.state.isSignedIn}/>\n        {\n          this.state.route === 'home'?\n          <div>\n            <Logo />\n            <Rank />\n            <ImageLinkForm\n              onInputChange = {this.onInputChange} \n              onSummit = {this.onSummit}\n            />        \n            <FaceRecognition box={this.state.box} imageUrl = {this.state.imageUrl}/>\n          </div>\n          :\n          (\n            this.state.route === 'signin'?\n            <Signin onRouteChange = {this.onRouteChange}/> \n            :\n            <Register loadUser={this.loadUser} onRouteChange = {this.onRouteChange}/> \n          )\n          \n           \n            \n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}